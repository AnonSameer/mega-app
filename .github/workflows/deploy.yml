name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to VPS
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          echo "🚀 Starting deployment..."
          
          # Check disk space before deployment
          echo "📊 Current disk usage:"
          df -h /
          
          # Navigate to app directory
          cd /opt/mega-app
          
          # Clean up Docker resources BEFORE deployment
          echo "🧹 Cleaning up Docker resources..."
          # Remove old containers and images
          docker system prune -f
          # Remove unused images (keeps currently used ones)
          docker image prune -a -f
          # Remove unused volumes (be careful - this removes ALL unused volumes)
          docker volume prune -f
          
          # Show disk space after cleanup
          echo "📊 Disk usage after cleanup:"
          df -h /
          
          # Backup current version (but limit backup size)
          echo "📦 Creating lightweight backup..."
          # Only backup essential config files, not the entire directory
          sudo mkdir -p /opt/backups
          sudo tar -czf /opt/backups/mega-app-config-$(date +%Y%m%d-%H%M%S).tar.gz \
            docker-compose.yml \
            .env* \
            nginx/ \
            --exclude=node_modules \
            --exclude=dist \
            --exclude=bin \
            --exclude=obj \
            2>/dev/null || true
          
          # Pull latest changes
          echo "📥 Pulling latest code..."
          git pull origin ${{ github.ref_name }}
          
          # Stop containers
          echo "🛑 Stopping containers..."
          docker compose down
          
          # Remove old containers and images from this app specifically
          echo "🗑️ Removing old app containers and images..."
          docker container prune -f
          docker rmi $(docker images mega-app* -q) 2>/dev/null || true

          # Run database migrations BEFORE starting containers
          echo "🗄️ Running database migrations..."
          cd server
          ASPNETCORE_ENVIRONMENT=Production dotnet ef database update
          cd ..
          
          # Build and start with latest code
          echo "🏗️ Building and starting containers..."
          docker compose up -d --build
          
          # Clean up build cache after successful build
          echo "🧽 Cleaning up build cache..."
          docker builder prune -f
          
          # Wait for containers to be ready
          echo "⏳ Waiting for containers to start..."
          sleep 30
          
          # Health check
          echo "🔍 Running health check..."
          if curl -f http://localhost/api/health > /dev/null 2>&1; then
            echo "✅ Deployment successful! API is responding."
          else
            echo "❌ Deployment failed! API not responding."
            echo "🔄 Rolling back..."
            docker compose down
            # Note: In enterprise, you'd restore from backup here
            exit 1
          fi
          
          # Final cleanup - keep only current images
          echo "🧹 Final cleanup..."
          # Remove dangling images
          docker image prune -f
          
          # Cleanup old backups (keep last 3 lightweight backups)
          echo "🗂️ Cleaning up old backups..."
          sudo find /opt/backups -name "mega-app-config-*" -type f | sort | head -n -3 | xargs sudo rm -f 2>/dev/null || true
          
          # Show final disk usage
          echo "📊 Final disk usage:"
          df -h /
          
          echo "🎉 Deployment complete!"